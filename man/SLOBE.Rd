% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SLOBE.R
\name{SLOBE}
\alias{SLOBE}
\title{SLOBE}
\usage{
SLOBE(X, y, lambda, a, b, beta.start = NA, maxit = 300,
  case = "MCAR", seed = NA, print_iter = FALSE, tol_em = 1e-06,
  impute = "PCA", sigma.known = NA, sigma.init = NA,
  method_na = "lineq")
}
\arguments{
\item{X}{Design matrix with missingness \eqn{n \times p}{n * p}}

\item{y}{Response vector \eqn{n \times 1}{n * 1}}

\item{lambda}{Penalization coefficient}

\item{a}{Coefficient for sparsity prior}

\item{b}{Coefficient for sparsity prior}

\item{beta.start}{Initialization for \eqn{\beta}{\tau}}

\item{maxit}{Maximum number of iteration. The default is maxit = 300.}

\item{case}{Missing mechanism}

\item{seed}{An integer as a seed set for the radom generator.}

\item{print_iter}{If TRUE, miss.saem will print the estimated parameters in each iteration of SAEM.}

\item{tol_em}{The tolerance to stop SAEM. The default is tol_em = 1e-6.}

\item{impute}{Imputation method for the initilization. The default is impute = 'PCA'.}

\item{sigma.known}{If TRUE, \eqn{\sigma}{\sigma} is known.}

\item{sigma.init}{Value for known \eqn{\sigma}{\sigma}.}

\item{method_na}{Method for dealing with missing values. Default is method_na = 'lineq'.}
}
\value{
A list with components
\item{X.sim}{Simulated dataset in the last iteration.}
\item{beta}{Estiamated \eqn{\beta}{\beta}.}
\item{gamma}{Simulated model selection indicator \eqn{\gamma}{\gamma} in the last iteration.}
\item{theta}{Simulated sparsity \eqn{\theta}{\theta} in the last iteration.}
\item{sigma}{Estimated \eqn{\sigma}{\sigma}.}
\item{mu}{Estimated \eqn{\mu}{\mu}.}
\item{Sigma}{Estimated \eqn{\Sigma}{\Sigma}.}
\item{c}{Simulated inverse of average signal magnitude c in the last iteration.}
}
\description{
A fast and simplified version of algorithm compared to ABSLOPE.
}
\examples{
# Generate dataset
n=50
p=50
nspr=10 # non-sparsity
p.miss=0.1 # percentage of missingness
mu = rep(0,p)
Sigma=toeplitz(0^(0:(p-1)))
signallevel=3 # signal strength
sigma=1 # noise
amplitude = signallevel*sqrt(2*log(p))  # signal amplitude
# Design matrix
X <- matrix(rnorm(n*p), nrow=n)\%*\%chol(Sigma) + matrix(rep(mu,n), nrow=n, byrow = TRUE)
X = scale(X)/sqrt(n) #scale

# Coefficient and response vectors
nonzero = sample(p, nspr)
beta = amplitude * (1:p \%in\% nonzero)
y = X \%*\% beta +  sigma*rnorm(n)

# Missing values
X.obs <- X
p.miss <- 0.10
patterns <- runif(n*p)<p.miss #missing completely at random
X.obs[patterns] <- NA

# ABSLOPE
lambda = create_lambda_bhq(ncol(X),fdr=0.10)
list.SLOB = SLOBE(X, y, lambda, a=2/p, b=1-2/p)
}
